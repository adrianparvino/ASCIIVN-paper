# #+OPTIONS: toc:nil

#+LATEX_HEADER: \newcommand\nl{\\}
#+TITLE: Visual novel engine for textual displays

# #+TITLE: Are there bactrians or dromedaries in University of San Carlos:
# #+TITLE: Verification and meta-analysis of the supposed double hump in Computer
# #+TITLE: Science
#+AUTHOR: Adrian Parvin D. Ouano
#+EMAIL: adrianparvino@gmail.com

#+LATEX_CLASS_OPTIONS: [12pt]
#+LATEX_HEADER: \newif\ifexport
#+LATEX_HEADER: \usepackage{microtype}
#+LATEX_HEADER: \usepackage{listings}
#+LATEX_HEADER: \usepackage[final]{pdfpages}
#+LATEX_HEADER: \usepackage[margin=1in]{geometry}
#+LATEX_HEADER: \usepackage[natbibapa]{apacite}
#+LATEX_HEADER: \usepackage{ragged2e}
#+LATEX_HEADER: \usepackage{usebib}
#+LATEX_HEADER: \usepackage{indentfirst}
#+LATEX_HEADER: \usepackage{fancyhdr}
#+LATEX_HEADER: \usepackage{fancyhdr}
#+LATEX_HEADER: \usepackage{glossaries}
#+LATEX_HEADER: \usepackage{titlesec}
#+LATEX_HEADER: \usepackage{tocloft}
#+LATEX_HEADER: \usepackage{etoc}
#+LATEX_HEADER: \usepackage{verbatim}
#+LATEX_HEADER: \usepackage{setspace}
#+LATEX_HEADER: \usepackage{pgfgantt}
#+LATEX_HEADER: \usepackage{float}
#+LATEX_HEADER: \setglossarysection{subsection}
#+LATEX_HEADER: \makeglossaries
#+LATEX_HEADER: \bibinput{Research}

# #+LATEX_HEADER: \exporttrue
#+LATEX_HEADER: \ifexport \usepackage{fontspec} \fi
#+LATEX_HEADER: \ifexport \usepackage{fontspec} \fi
#+LATEX_HEADER: \ifexport \setmainfont{Times New Roman} \fi
#+LATEX_HEADER: \ifexport \renewcommand{\baselinestretch}{2} \fi
#+LATEX_HEADER: \ifexport \titleformat{\section}{\center \bf}{}{0in}{} \fi
#+LATEX_HEADER: \ifexport \titleformat{\subsection}{\bf}{}{0in}{} \fi
#+LATEX_HEADER: \ifexport \titleformat{\subsubsection}{\bf}{}{0.5in}{} \fi
#+LATEX_HEADER: \ifexport \setlength{\parindent}{0.5in} \fi
#+LATEX_HEADER: \ifexport \renewcommand{\cftdot}{} \fi
#+LATEX_HEADER: \ifexport \input{TitlePage.tex} \fi
#+LATEX_HEADER: \cftsetindents{section}{0em}{2em}
#+LATEX_HEADER: \cftsetindents{subsection}{0.5in}{2em}
#+LATEX_HEADER: \cftsetindents{subsubsection}{1in}{2em}
#+LATEX_HEADER: \makeatletter
#+LATEX_HEADER: \renewcommand{\cftsecpresnum}{\begin{lrbox}{\@tempboxa}}
#+LATEX_HEADER: \renewcommand{\cftsecaftersnum}{\end{lrbox}}
#+LATEX_HEADER: \setlength{\cftsecnumwidth}{0pt}
#+LATEX_HEADER: \renewcommand{\cftsubsecpresnum}{\begin{lrbox}{\@tempboxa}}
#+LATEX_HEADER: \renewcommand{\cftsubsecaftersnum}{\end{lrbox}}
#+LATEX_HEADER: \setlength{\cftsubsecnumwidth}{0pt}
#+LATEX_HEADER: \renewcommand{\cftsubsubsecpresnum}{\begin{lrbox}{\@tempboxa}}
#+LATEX_HEADER: \renewcommand{\cftsubsubsecaftersnum}{\end{lrbox}}
#+LATEX_HEADER: \setlength{\cftsubsubsecnumwidth}{0pt}
#+LATEX_HEADER: \makeatother

#+LATEX_HEADER: \renewcommand\contentsname{\clearpage\begin{center} \normalfont \normalsize \bfseries Contents \end{center}}
#+LATEX_HEADER: \renewcommand\tocloftpagestyle{\thispagestyle{fancy}}

#+LATEX_HEADER: \newcommand{\citetitle}[1]{\usebibentry{#1}{title} \citep{#1}}
# Must check if it is an article or a book. Books are italicized while articles aren't.

#+LATEX_HEADER: \fancypagestyle{plain}{
#+LATEX_HEADER: \fancyhf{}
#+LATEX_HEADER: \renewcommand{\headrulewidth}{0pt}
#+LATEX_HEADER: }

#+LATEX_HEADER: \fancyhf{}
#+LATEX_HEADER: \renewcommand{\headrulewidth}{0pt}
#+LATEX_HEADER: \fancyhead[R]{\thepage}

#+LATEX_HEADER: \newcommand{\sectionbreak}{\clearpage}
#+LATEX_HEADER: \lstset{frame=tb,
#+LATEX_HEADER:   language=C,
#+LATEX_HEADER:   aboveskip=3mm,
#+LATEX_HEADER:   belowskip=3mm,
#+LATEX_HEADER:   showstringspaces=false,
#+LATEX_HEADER:   columns=flexible,
#+LATEX_HEADER:   basicstyle={\small\ttfamily},
#+LATEX_HEADER:   numbers=none,
#+LATEX_HEADER:   numberstyle=\tiny\color{gray},
#+LATEX_HEADER:   keywordstyle=\color{blue},
#+LATEX_HEADER:   commentstyle=\color{dkgreen},
#+LATEX_HEADER:   stringstyle=\color{mauve},
#+LATEX_HEADER:   breaklines=true,
#+LATEX_HEADER:   breakatwhitespace=true,
#+LATEX_HEADER:   tabsize=3
#+LATEX_HEADER: }

# #+BEGIN_abstract
# This paper aims to verify the methodology of cite:dehnadi2006camel.
# They have made claims of the bimodality of the scores of the Computer Science course.
# This paper focuses on their use of the equality symbol(=) in their consistency tests and
# uses the arrow symbol(<-) as an experimental design.
# 37 samples were taken from Grade 12 Senior High School students of University of San Carlos: Talamban Campus.
# This paper failed to produce any significant difference between the results of the equality symbol(=) and the arrow symbol(<-).
#
# #+END_abstract

#+LATEX_HEADER: \renewcommand{\etocaftertitlehook}{\pagestyle{empty}}
#+LATEX_HEADER: \renewcommand{\etocaftertochook}{\pagestyle {empty}}
#+latex_header_extra: \newglossaryentry{hdl}{name={hardware description language},description={A language used for the development and simulation of hardware}}
#+latex_header_extra: \newglossaryentry{decouple}{name={decouple},description={Form a new interpretation despite having already having an old contradictory information}}

#+LATEX: \clearpage
#+LATEX: \pagestyle{fancy}
# #+LATEX: \twocolumn
# #+LATEX: \ifexport\onecolumn\fi
* Introduction
** Rationale
This research is an application of our Computer Programming course.
This research aims to give highlight to a new and unconventional form of media image presentation
which is ASCII (American Standard Code for Information Interchange) art and is currently mostly unknown or underestimated by various people.
We aim to develop an engine which would convert visual images to ASCII art,
and apply it to various forms of media,
such as visual novels, text-based games, or animations.

Facebook has created a neural network that detects the components of a scene and provides an automatic description, however,
it is unable to understand lower level constructs such as structures and context.
This research is able to avoid that problem by re-creating the image.
If the image is accurate enough,
it can also serve as a preview of the image.
** Statement of the Problem
  1. As an Engine

    The problem in our project is the integration of Visual Images to ASCII art.
    Thus, we have the following objectives:
    1. To see if the engine is fully functional and usable.
    2. To clear out any bugs in the system.
    3. To check if the image is usable and understandable to the user.
    4. To be able to convert any Visual Image to ASCII art.
  2. As a Product

    The next problem is if the product sells.
    This product is mostly unconventional since not a lot of people are aware of the existence of ASCII art
    and as a consequence may be less interested in our product since the product aims at specific users who are interested in Visual Novels,
    who are interested in the engine we developed,
    and who are interested in the ASCII art itself.
    Thus, to address these we have the following objectives:
    1. To compare Visual Art and ASCII art.
    2. To survey the target population's interest in the product.

** Significance of the Study
This study contributes to the field of visual recognition.
The success of this study will provide clues on the information relevant to recognizability of images.
It also experiments with the mixture of two rendering methods and compositing it into one image in order to enhance the quality of the image.
Due to the inherent characteristics of the program, it also has the advantage in being able to be used in text-only displays
such as the HD44780 which is a controller for character-based liquid crystal displays, and older phones and pagers; and also be used in bad signal conditions.
ASCII art has long been used to visually represent complex structures on chat systems such as IRC(Internet Relay Chat), and
also in the days of modem as not only was the internet connection limited,
it was also too slow to reasonably load images; without ASCII art,
complex structures would be impossible to transfer in a reasonable amount of time for real-time communication.
** Scope and Limitation
The study will be conducted within a span of 3 months,
with a month dedicated to experimentation and a week for survey to receive feedback
regarding our product and will be aimed at sample who are experienced in either art or gaming.

The study is limited to the usage of the C programming language,
a mix of line and field art as other forms of computer art will not be studied and compared.
In addition, this study is focused on the creation of our product and is not meant to be compared to other researches.
We will, however, be comparing the results of the program to the original image,
in order to measure the clarity and the accuracy of the generated ASCII art.
Colors are also not explored in this research meaning that although the art scanned in the program is colored,
the converted ASCII art displayed will be only in black and white text.
* Review of Related Literature
cite:xu2010structure shows a new algorithm separate from SSIM in order to produce ASCII art.
The algorithm they produced mimics “deformation,” an ASCII artist technique that professional ASCII artists use;
it deforms the image and sacrifices visual accuracy in order to
make it clearer as the ASCII art “pixels” are inherently more limited than actual pixels.

cite:ogrady2008automatic aims for a bitmap approach --
it produces ASCII art that is concerned about the shape of filled objects
rather than the outline of the objects.
ASCII art renders like this tend to be more appropriate for backgrounds,
where contrast is less important and visual clarity is sacrificed for a more scenic artwork.

cite:miyake2011interactive points out that different pictures have require different treatment and thus
created an interactive system to allow users to
choose the most appropriate rendering method for the given image.

cite:singh2015research states that C language will be utilized among the many programming languages available for the development of this project.
It is a structured and methodical language used both for operating systems (OS) and applications
with a wide following in the academic community.
It is one of the most important basic courses of study in science and engineering college.

C was developed at Bell Laboratories in 1972 by American computer scientist Dennis Ritchie.
Its features were derived from an earlier language called “B” (Basic Combined Programming Language – BCPL) and
was originally invented for implementing UNIX operating system.
To this day, it is best known for its reliability, portability, flexibility, interactivity, modularity, efficiency, and effectiveness citep:singh2015research.

In cite:cprogramming, it is made known that the C language is a statically typed imperative language.
It features much of basic and derived data types, structures and unions, operators, flow controls, and more.
It is closely linked to the computer's hardware, thus changing its performance based on whether the system is in 32-bit or 64-bit,
which may result in different data type representation.

For many decades, C has been used as a base language for many video games, with or without graphics.
An ideal and completely functional game is a perfect combination of actions-reactions or event-responses the responses are based on the most-recently occurred event.
C's basic methodical and systematic nature therefore makes it efficient for this logic development citep:jacob2013.

Visual Novels are a medium using the narrative fashion of Literature,
however in a digital format that could technically considered a video game.
They have a tendency to put more emphasis on the plot and on characterization,
in preference to on action scenes, like interactive fiction and more so than Adventure Games.
Visual Novels are successfully seen as a virtual evolution of Choose Your Own Adventure books,
with music, pictures, and occasionally even voice acting or movies.
However, unlike most Choose Your Own Adventure books,
they normally branch off into distinct storylines early on,
and may have plenty more choice points (since they're virtual and consequently do not suffer from physical barriers.)
Puzzle, quests and escape games are often embedded within the plot to be able to strengthen the storyline(s) cite:visualnovel.

cite:crimmins2016 states that visual novels aren't a static object.
They've changed a lot since their inception,
so limiting them to just one definition risks overlooking important historical developments.
In fact, when we examine visual novel history in greater detail,
we see the genre operating on at least two distinct definitions.
Where earlier visual novels told their stories primarily through manga-like composition,
the modern visual novel (where character portraits tell the story through theatrical presentation) was a later development.
Each type had their own unique origins, and each had a significant impact on how visual novels conveyed narrative.

cite:cavallaro2010anime states that the visual novel typically articulates its narrative
by means of extensive text conversations complemented by lovingly depicted generic backgrounds and dialogue boxes
with characters sprites determining the speaker superimposed upon them.
* Methodology
** Luminosity
The luminosity or brightness  of the two sprites are compared to one another and
the following metric is used in order to determine which sprite to use.
The definition used for luminosity in this study is the arithmetic mean:
\begin{align}
\frac{1}{n}\sum\limits_{i = 1}^{n} _i
\end{align}
of the pixel values; where 
\(x_i\) is the \(i\)th pixel value; and
\(n\) is the number of pixels in the window.
Or equivalently
\begin{align}
\sum\limits_{i = 1}^{n} \frac{x_i}{n}
\end{align}

However, for large values of \(n\), overflow may occur. 
Instead, the following online algorithm is used
\begin{align}
\begin{split}
dx &= \overline{x}_i - x_i\\
\overline{x}_{i+1} &= \overline{x}_i + \frac{dx}{i + 1}
\end{split}
\end{align}
\begin{lstlisting}
for (int i = 0; i < n; ++i)
  {
    float dx = x_i - x_mean;
    x_mean += dx/(i + 1);
  }
\end{lstlisting}
which starts with \(i = 0\).

A cache is built and stored in an ordered array and 
a linear search is then performed and 
the most luminous character glyph 
less than the luminosity of the region glyph is selected as the most appropriate glyph.

In order to choose the most appropriate glyph, 
an extended quasimetric space is defined as follows:
\begin{equation}
{
\setstretch{1.0}
\begin{split}
d : \mathbb{R} \times \mathbb{R} \to [0, \infty]\\
d(x, y) =
\begin{cases}
y - x & x \leq y\\
\infty & y < x
\end{cases}
\end{split}
}
\end{equation}

** Structural SIMilarity (SSIM)
The Structural SIMilarity(hereinafter referred to as SSIM) method is used in order to not only gauge the luminosity of the sprites 
but also the contrast and structural similarity.
SSIM is not a single metric but rather a combination of 3 metrics -- 
luminosity, calculated as the arithmetic mean; 
contrast, calculated as the population variance; and
structure, calculated as the covariance of the 2 sprites.

The formula for luminosity has already been presented;
both contrast and structure relies on the covariance algorithm.
The moment is calculated using the formula:
\begin{equation}
C_n = \sum\limits_{i=1}^n (x_i - \overline{x}_n)(y_i - \overline{y}_n)
\end{equation}
where
\begin{align}
\overline{x}_n &= \overline{x}_{n-1} + \frac{x_n - x_{n-1}}{n}\\
\overline{y}_n &= \overline{y}_{n-1} + \frac{y_n - y_{n-1}}{n}
\end{align}
and the covariance being calculated as
\begin{equation}
\sigma_{XY} = \text{Cov}(X,Y) = \frac{C_n}{n}
\end{equation}
and the variance being calculated as
\begin{equation}
\sigma_X^2 =\text{Var}(X) = \text{Cov}(X,X)
\end{equation}

Finally, the luminosity, contrast and structure are calculated using
\begin{align}
\begin{split}
l(x,y)&=\frac{2\mu_x\mu_y + c_1}{\mu^2_x + \mu^2_y + c_1}\\
c(x,y)&=\frac{2\sigma_x\sigma_y + c_2}{\sigma^2_x + \sigma^2_y + c_2}\\
s(x,y)&=\frac{\sigma_{xy} + c_3}{\sigma_x \sigma_y + c_3}
\end{split}
\end{align}
where
\(c_1 = (k_1L)^2\),
\(c_2 = (k_2L)^2\),
\(c_3 = \frac{c_2}{2}\), and
\(L = 2^n - 1\) where \(n\) refers to the number of bits per pixel.

The following is the SSIM formula:
\begin{equation}
\text{SSIM}(x,y) = \left[ l(x,y)^\alpha \cdot c(x,y)^\beta \cdot s(x,y)^\gamma \right]
\end{equation}
where the weights are typically \(\alpha = \beta = \gamma = 1\).

# the following formulae are used to calculate the remaining 2 metrics:

# This gives SSIM its name -- Structural SIMilarity.

** Comparison
Following the works of cite:xu2010structure,
participants will be asked to rate on a 1-10 scale on the accuracy and clarity of the generated ASCII art and a hand-drawn ASCII art.
Once the data is collected, the mean and the standard deviation are taken, and
the efficiency(accuracy/clarity per unit time) is compared.
#+LATEX: \RaggedRight
#+LATEX: \clearpage
#+LATEX: \addcontentsline{toc}{section}{References}

bibliography:Research.bib
bibliographystyle:apacite
#+LATEX: \clearpage

* Timeline
\begin{figure}[H]
\begin{ganttchart}{0}{23}
% %labels
\gantttitle{2017}{12}
\gantttitle{2018}{12} \\
\gantttitle{Nov}{6}
\gantttitle{Dec}{6}
\gantttitle{Jan}{6}
\gantttitle{Feb}{6} \\
% 
% %tasks
\ganttbar{Implementation of Engine}{0}{16} \\
\ganttbar{SSIM}{0}{4} \\
\ganttbar{Luminosity}{0}{4} \\
\ganttbar{PNG loading}{5}{8} \\
\ganttbar{Transition}{9}{12} \\
\ganttbar{Dialog}{13}{16} \\
\ganttbar{Feedback}{17}{20} \\
\ganttbar{First Batch}{17}{18} \\
\ganttbar{Second Batch}{19}{20} \\
\ganttbar{Implementation of Slides}{21}{23}
% 
\end{ganttchart}
\caption{Timeline}
\end{figure}

# Local Variables:
# mode: org
# org-latex-pdf-process: ("lualatex -interaction nonstopmode -output-directory %o %f" "bibtex %b"  "makeglossaries %b" "lualatex -interaction nonstopmode -output-directory %o %f" "lualatex -interaction nonstopmode -output-directory %o %f")
# org-latex-caption-above: nil
# DISABLED: org-latex-pdf-process: ("pdflatex -interaction nonstopmode -output-directory %o %f" "bibtex %b" "makeglossaries %b" "pdflatex -interaction nonstopmode -output-directory %o %f" "pdflatex -interaction nonstopmode -output-directory %o %f")
# End:

#+LATEX: \RaggedRight
#+LATEX: \clearpage
#+LATEX: \addcontentsline{toc}{section}{References}

bibliography:Research.bib
bibliographystyle:apacite
#+LATEX: \clearpage

# Local Variables:
# mode: org
# org-latex-pdf-process: ("lualatex -interaction nonstopmode -output-directory %o %f" "bibtex %b"  "makeglossaries %b" "lualatex -interaction nonstopmode -output-directory %o %f" "lualatex -interaction nonstopmode -output-directory %o %f")
# org-latex-caption-above: nil
# DISABLED: org-latex-pdf-process: ("pdflatex -interaction nonstopmode -output-directory %o %f" "bibtex %b" "makeglossaries %b" "pdflatex -interaction nonstopmode -output-directory %o %f" "pdflatex -interaction nonstopmode -output-directory %o %f")
# End:
